#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub2-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
set pager=1

if [ -s $prefix/grubenv ]; then
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if loadfont unicode ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ x$feature_timeout_style = xy ] ; then
  set timeout_style=menu
  set timeout=5
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout=5
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/01_users ###
if [ -f ${prefix}/user.cfg ]; then
  source ${prefix}/user.cfg
  if [ -n "${GRUB2_PASSWORD}" ]; then
    set superusers="root"
    export superusers
    password_pbkdf2 root ${GRUB2_PASSWORD}
  fi
fi
### END /etc/grub.d/01_users ###

### BEGIN /etc/grub.d/20_linux_xen ###
menuentry 'Qubes, with Xen hypervisor' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-simple-UUID3' {
	insmod part_msdos
	insmod ext2
	set root='hd0,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
	else
	  search --no-floppy --fs-uuid --set=root UUID1
	fi
	echo	'Loading Xen 4.6.5 ...'
        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
            xen_rm_opts=
        else
            xen_rm_opts="no-real-mode edd=off"
        fi
	multiboot	/xen-4.6.5.gz placeholder   ${xen_rm_opts}
	echo	'Loading Linux 4.4.67-13.pvops.qubes.x86_64 ...'
	module	/vmlinuz-4.4.67-13.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
	echo	'Loading initial ramdisk ...'
	module	--nounzip   /initramfs-4.4.67-13.pvops.qubes.x86_64.img
}
submenu 'Advanced options for Qubes (with Xen hypervisor)' $menuentry_id_option 'gnulinux-advanced-UUID3' {
	submenu 'Xen hypervisor, version 4.6.5' $menuentry_id_option 'xen-hypervisor-4.6.5-UUID3' {
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.67-13.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-13.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-13.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-13.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-13.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.67-13.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-13.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-13.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-13.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-13.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.67-12.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-12.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.67-12.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-12.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.62-12.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.62-12.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.62-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.62-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.62-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5 and Linux 4.4.62-12.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.62-12.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5 ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.62-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.62-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.62-12.pvops.qubes.x86_64.img
		}
	}
	submenu 'Xen hypervisor, version 4.6.5-heads' $menuentry_id_option 'xen-hypervisor-4.6.5-heads-UUID3' {
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.67-13.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-13.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-13.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-13.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-13.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.67-13.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-13.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-13.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-13.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-13.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.67-12.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-12.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.67-12.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.67-12.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.67-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.67-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.67-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.62-12.pvops.qubes.x86_64' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.62-12.pvops.qubes.x86_64-advanced-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder   ${xen_rm_opts}
			echo	'Loading Linux 4.4.62-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.62-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro  rd.qubes.hide_all_usb 
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.62-12.pvops.qubes.x86_64.img
		}
		menuentry 'Qubes, with Xen 4.6.5-heads and Linux 4.4.62-12.pvops.qubes.x86_64 (recovery mode)' --class gnu-linux --class gnu --class os --class xen $menuentry_id_option 'xen-gnulinux-4.4.62-12.pvops.qubes.x86_64-recovery-UUID3' {
			insmod part_msdos
			insmod ext2
			set root='hd0,msdos1'
			if [ x$feature_platform_search_hint = xy ]; then
			  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  UUID1
			else
			  search --no-floppy --fs-uuid --set=root UUID1
			fi
			echo	'Loading Xen 4.6.5-heads ...'
		        if [ "$grub_platform" = "pc" -o "$grub_platform" = "" ]; then
		            xen_rm_opts=
		        else
		            xen_rm_opts="no-real-mode edd=off"
		        fi
			multiboot	/xen-4.6.5-heads.gz placeholder  ${xen_rm_opts}
			echo	'Loading Linux 4.4.62-12.pvops.qubes.x86_64 ...'
			module	/vmlinuz-4.4.62-12.pvops.qubes.x86_64 placeholder root=/dev/mapper/luks-UUID2 ro single  rd.qubes.hide_all_usb
			echo	'Loading initial ramdisk ...'
			module	--nounzip   /initramfs-4.4.62-12.pvops.qubes.x86_64.img
		}
	}
}

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/20_ppc_terminfo ###
### END /etc/grub.d/20_ppc_terminfo ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
