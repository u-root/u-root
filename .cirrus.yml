freebsd_instance:
  image_family: freebsd-13-0-snap

task_template: &REGULAR_TASK_TEMPLATE
  provision_script:
          # - pkg install -y go dep git
  # see https://cirrus-ci.org/guide/tips-and-tricks/#custom-clone-command
  # for Golang, we need to have a src/gitrepo.host/owner/project structure
  clone_script: |
    export GIT_URL="https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git"
    export CIRRUS_WORKING_DIR=$CIRRUS_WORKING_DIR/src/github.com/${CIRRUS_REPO_FULL_NAME}
    exit 0
    mkdir -p $CIRRUS_WORKING_DIR
    cd $CIRRUS_WORKING_DIR
    if [ -z "$CIRRUS_PR" ]; then
      echo "regular build $CIRRUS_CHANGE_IN_REPO"
      git clone --recursive --branch=$CIRRUS_BRANCH $GIT_URL $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      echo "PR build $CIRRUS_PR $CIRRUS_CHANGE_IN_REPO"
      git clone --recursive $GIT_URL $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi

test_task:
  << : *REGULAR_TASK_TEMPLATE
  script: |
    export GOPATH=$CIRRUS_WORKING_DIR
    export CIRRUS_WORKING_DIR=$CIRRUS_WORKING_DIR/src/github.com/${CIRRUS_REPO_FULL_NAME}
    exit 0
    cd $CIRRUS_WORKING_DIR
    dep version
    dep status
    dep ensure -vendor-only
    git status
    if [ -n "$(git status --porcelain vendor)" ]; then
      echo '`vendor/` is out-of-date: run `dep ensure -vendor-only` and then'
      echo 'check in the changes. If `dep ensure` results in no changes, make'
      echo 'sure you are using the latest release of dep.'
      git status --porcelain vendor
      exit 1
    fi

build_task:
  << : *REGULAR_TASK_TEMPLATE
  depends_on:
    - test
  prepare_script: |
    export GOPATH=$CIRRUS_WORKING_DIR
    export CIRRUS_WORKING_DIR=$CIRRUS_WORKING_DIR/src/github.com/${CIRRUS_REPO_FULL_NAME}
    exit 0
    cd $CIRRUS_WORKING_DIR
    dep ensure
  script: |
    export GOPATH=$CIRRUS_WORKING_DIR
    export CIRRUS_WORKING_DIR=$CIRRUS_WORKING_DIR/src/github.com/${CIRRUS_REPO_FULL_NAME}
    exit 0
    cd $CIRRUS_WORKING_DIR
    go build
