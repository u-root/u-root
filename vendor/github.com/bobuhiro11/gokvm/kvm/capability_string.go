// Code generated by "stringer -type=Capability"; DO NOT EDIT.

package kvm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CapIRQChip-0]
	_ = x[CapHLT-1]
	_ = x[CapMMUShadowCacheControl-2]
	_ = x[CapUserMemory-3]
	_ = x[CapSetTSSAddr-4]
	_ = x[CapVAPIC-6]
	_ = x[CapEXTCPUID-7]
	_ = x[CapClockSource-8]
	_ = x[CapNRVCPUS-9]
	_ = x[CapNRMemSlots-10]
	_ = x[CapPIT-11]
	_ = x[CapNopIODelay-12]
	_ = x[CapPVMMU-13]
	_ = x[CapMPState-14]
	_ = x[CapCoalescedMMIO-15]
	_ = x[CapSyncMMU-16]
	_ = x[CapIOMMU-18]
	_ = x[CapDestroyMemoryRegionWorks-21]
	_ = x[CapUserNMI-22]
	_ = x[CapSetGuestDebug-23]
	_ = x[CapReinjectControl-24]
	_ = x[CapIRQRouting-25]
	_ = x[CapIRQInjectStatus-26]
	_ = x[CapAssignDevIRQ-29]
	_ = x[CapJoinMemoryRegionsWorks-30]
	_ = x[CapMCE-31]
	_ = x[CapIRQFD-32]
	_ = x[CapPIT2-33]
	_ = x[CapSetBootCPUID-34]
	_ = x[CapPITState2-35]
	_ = x[CapIOEventFD-36]
	_ = x[CapSetIdentityMapAddr-37]
	_ = x[CapXENHVM-38]
	_ = x[CapAdjustClock-39]
	_ = x[CapInternalErrorData-40]
	_ = x[CapVCPUEvents-41]
	_ = x[CapS390PSW-42]
	_ = x[CapPPCSegState-43]
	_ = x[CapHyperV-44]
	_ = x[CapHyperVVAPIC-45]
	_ = x[CapHyperVSPIN-46]
	_ = x[CapPCISEgment-47]
	_ = x[CapPPCPairedSingles-48]
	_ = x[CapINTRShadow-49]
	_ = x[CapDebugRegs-50]
	_ = x[CapX86RobustSinglestep-51]
	_ = x[CapPPCOSI-52]
	_ = x[CapPPCUnsetIRQ-53]
	_ = x[CapEnableCap-54]
	_ = x[CapXSave-55]
	_ = x[CapXCRS-56]
	_ = x[CapPPCGetPVInfo-57]
	_ = x[CapPPCIRQLevel-58]
	_ = x[CapASYNCPF-59]
	_ = x[CapTSCControl-60]
	_ = x[CapGetTSCkHz-61]
	_ = x[CapPPCBookeSREGS-62]
	_ = x[CapSPAPRTCE-63]
	_ = x[CapPPCSMT-64]
	_ = x[CapPPCRMA-65]
	_ = x[CapMAXVCPUS-66]
	_ = x[CapPPCHIOR-67]
	_ = x[CapPPCPAPR-68]
	_ = x[CapSWTLB-69]
	_ = x[CapONEREG-70]
	_ = x[CapS390GMap-71]
	_ = x[CapTSCDeadlineTimer-72]
	_ = x[CapS390UControl-73]
	_ = x[CapSyncRegs-74]
	_ = x[CapPCI23-75]
	_ = x[CapKVMClockCtrl-76]
	_ = x[CapSignalMSI-77]
	_ = x[CapPPCGetSMMUInfo-78]
	_ = x[CapS390COW-79]
	_ = x[CapPPCAllocHTAB-80]
	_ = x[CapReadOnlyMEM-81]
	_ = x[CapIRQFDResample-82]
	_ = x[CapPPCBokkeWatchdog-83]
	_ = x[CapPPCHTABFD-84]
	_ = x[CapS390CSSSupport-85]
	_ = x[CapPPCEPR-86]
	_ = x[CapARMPSCI-87]
	_ = x[CapARMSetDeviceAddr-88]
	_ = x[CapDeviceCtrl-89]
	_ = x[CapIRQMPIC-90]
	_ = x[CapPPCRTAS-91]
	_ = x[CapIRQXICS-92]
	_ = x[CapARMEL132BIT-93]
	_ = x[CapSPAPRMultiTCE-94]
	_ = x[CapEXTEmulCPUID-95]
	_ = x[CapHyperVTIME-96]
	_ = x[CapIOAPICPolarityIgnored-97]
	_ = x[CapEnableCAPVM-98]
	_ = x[CapS390IRQCHIP-99]
	_ = x[CapIOEVENTFDNoLength-100]
	_ = x[CapVMAttributes-101]
	_ = x[CapARMPSCI02-102]
	_ = x[CapPPCFixupHCALL-103]
	_ = x[CapPPCEnableHCALL-104]
	_ = x[CapCheckExtentionVM-105]
	_ = x[CapS390UserSIGP-106]
	_ = x[CapS390VectorRegisters-107]
	_ = x[CapS390MemOp-108]
	_ = x[CapS390UserSTSI-109]
	_ = x[CapS390SKEYS-110]
	_ = x[CapMIPSFPU-111]
	_ = x[CapMIPSMSA-112]
	_ = x[CapS390InjectIRQ-113]
	_ = x[CapS390IRQState-114]
	_ = x[CapPPCHWRNG-115]
	_ = x[CapDisableQuirks-116]
	_ = x[CapX86SMM-117]
	_ = x[CapMultiAddressSpace-118]
	_ = x[CapGuestDebugHWBPS-119]
	_ = x[CapGuestDebugHWWPS-120]
	_ = x[CapSplitIRQChip-121]
	_ = x[CapIOEventFDAnyLength-122]
	_ = x[CapHyperVSYNIC-123]
	_ = x[CapS390RI-124]
	_ = x[CapSPAPRTCE64-125]
	_ = x[CapARMPMUV3-126]
	_ = x[CapVCPUAttributes-127]
	_ = x[CapMAXVCPUID-128]
	_ = x[CapX2APICAPI-129]
	_ = x[CapS390UserINSTR0-130]
	_ = x[CapMSIDEVID-131]
	_ = x[CapPPCHTM-132]
	_ = x[CapSPAPRResizeHPT-133]
	_ = x[CapPPCMMURADIX-134]
	_ = x[CapPPCMMUHASHV3-135]
	_ = x[CapImmediateExit-136]
	_ = x[CapMIPSVZ-137]
	_ = x[CapMIPSTE-138]
	_ = x[CapMIPS64BIT-139]
	_ = x[CapS390GS-140]
	_ = x[CapS390AIS-141]
	_ = x[CapSPAPRTCEVFIO-142]
	_ = x[CapX86DisableExits-143]
	_ = x[CapARMUserIRQ-144]
	_ = x[CapS390CMMAMigration-145]
	_ = x[CapPPCFWNMI-146]
	_ = x[CapPPCSMTPossible-147]
	_ = x[CapHyperVSYNIC2-148]
	_ = x[CapHyperVVPIndex-149]
	_ = x[CapS390AISMigration-150]
	_ = x[CapPPCGetCPUChar-151]
	_ = x[CapS390BPB-152]
	_ = x[CapGETMSRFeatures-153]
	_ = x[CapHyperVEventFD-154]
	_ = x[CapHyperVTLBFlush-155]
	_ = x[CapS390HPage1M-156]
	_ = x[CapNestedState-157]
	_ = x[CapARMInjectSErrorESR-158]
	_ = x[CapMSRPlatformInfo-159]
	_ = x[CapPPCNestedHV-160]
	_ = x[CapHyperVSendIPI-161]
	_ = x[CapCoalescedPIO-162]
	_ = x[CapHyperVEnlightenedVMCS-163]
	_ = x[CapExceptionPayload-164]
	_ = x[CapARMVMIPASize-165]
	_ = x[CapManualDirtyLogProtect-166]
	_ = x[CapHyerVCPUID-167]
	_ = x[CapManualDirtyLogProtect2-168]
	_ = x[CapPPCIRQXive-169]
	_ = x[CapARMSVE-170]
	_ = x[CapARMPTRAuthAddress-171]
	_ = x[CapARMPTRAuthGeneric-172]
	_ = x[CapPMUEventFilter-173]
	_ = x[CapARMIRQLineLayout2-174]
	_ = x[CapHyperVDirectTLBFlush-175]
	_ = x[CapPPCGuestDebugSStep-176]
	_ = x[CapARMNISVToUser-177]
	_ = x[CapARMInjectEXTDABT-178]
	_ = x[CapS390VCPUResets-179]
	_ = x[CapS390Protected-180]
	_ = x[CapPPCSecureGuest-181]
	_ = x[CapHALTPoll-182]
	_ = x[CapASYNCPFInt-183]
	_ = x[CapLastCPU-184]
	_ = x[CapSmallerMaxPhyAddr-185]
	_ = x[CapS390DIAG318-186]
	_ = x[CapStealTime-187]
	_ = x[CapX86UserSpaceMSR-188]
	_ = x[CapX86MSRFilter-189]
	_ = x[CapEnforcePVFeatureCPUID-190]
	_ = x[CapSysHyperVCPUID-191]
	_ = x[CapDirtyLogRing-192]
	_ = x[CapX86BusLockExit-193]
	_ = x[CapPPCDAWR1-194]
	_ = x[CapSetGuestDebug2-195]
	_ = x[CapSGXAttribute-196]
	_ = x[CapVMCopyEncContextFrom-197]
	_ = x[CapPTPKVM-198]
	_ = x[CapHyperVEnforceCPUID-199]
	_ = x[CapSREGS2-200]
	_ = x[CapEXitHyperCall-201]
	_ = x[CapPPCRPTInvalidate-202]
	_ = x[CapBinaryStatsFD-203]
	_ = x[CapExitOnEmulationFailure-204]
	_ = x[CapARMMTE-205]
	_ = x[CapVMMoveEncContextFrom-206]
	_ = x[CapVMGPABits-207]
	_ = x[CapXSave2-208]
	_ = x[CapSysAttributes-209]
	_ = x[CapPPCAILMode3-210]
	_ = x[CapS390MemOpExtention-211]
	_ = x[CapPMUCapability-212]
	_ = x[CapDisableQuirks2-213]
	_ = x[CapVMTSCControl-214]
	_ = x[CapSystemEventData-215]
	_ = x[CapARMSystemSuspend-216]
	_ = x[CapS390ProtectedDump-217]
	_ = x[CapX86TripleFaultEvent-218]
	_ = x[CapX86NotifyVMExit-219]
	_ = x[CapVMDisableNXHugePages-220]
	_ = x[CapS390ZPCIOP-221]
	_ = x[CapS390CPUTOPOLOGY-222]
	_ = x[CapDirtyLogRingACQRel-223]
}

const (
	_Capability_name_0 = "CapIRQChipCapHLTCapMMUShadowCacheControlCapUserMemoryCapSetTSSAddr"
	_Capability_name_1 = "CapVAPICCapEXTCPUIDCapClockSourceCapNRVCPUSCapNRMemSlotsCapPITCapNopIODelayCapPVMMUCapMPStateCapCoalescedMMIOCapSyncMMU"
	_Capability_name_2 = "CapIOMMU"
	_Capability_name_3 = "CapDestroyMemoryRegionWorksCapUserNMICapSetGuestDebugCapReinjectControlCapIRQRoutingCapIRQInjectStatus"
	_Capability_name_4 = "CapAssignDevIRQCapJoinMemoryRegionsWorksCapMCECapIRQFDCapPIT2CapSetBootCPUIDCapPITState2CapIOEventFDCapSetIdentityMapAddrCapXENHVMCapAdjustClockCapInternalErrorDataCapVCPUEventsCapS390PSWCapPPCSegStateCapHyperVCapHyperVVAPICCapHyperVSPINCapPCISEgmentCapPPCPairedSinglesCapINTRShadowCapDebugRegsCapX86RobustSinglestepCapPPCOSICapPPCUnsetIRQCapEnableCapCapXSaveCapXCRSCapPPCGetPVInfoCapPPCIRQLevelCapASYNCPFCapTSCControlCapGetTSCkHzCapPPCBookeSREGSCapSPAPRTCECapPPCSMTCapPPCRMACapMAXVCPUSCapPPCHIORCapPPCPAPRCapSWTLBCapONEREGCapS390GMapCapTSCDeadlineTimerCapS390UControlCapSyncRegsCapPCI23CapKVMClockCtrlCapSignalMSICapPPCGetSMMUInfoCapS390COWCapPPCAllocHTABCapReadOnlyMEMCapIRQFDResampleCapPPCBokkeWatchdogCapPPCHTABFDCapS390CSSSupportCapPPCEPRCapARMPSCICapARMSetDeviceAddrCapDeviceCtrlCapIRQMPICCapPPCRTASCapIRQXICSCapARMEL132BITCapSPAPRMultiTCECapEXTEmulCPUIDCapHyperVTIMECapIOAPICPolarityIgnoredCapEnableCAPVMCapS390IRQCHIPCapIOEVENTFDNoLengthCapVMAttributesCapARMPSCI02CapPPCFixupHCALLCapPPCEnableHCALLCapCheckExtentionVMCapS390UserSIGPCapS390VectorRegistersCapS390MemOpCapS390UserSTSICapS390SKEYSCapMIPSFPUCapMIPSMSACapS390InjectIRQCapS390IRQStateCapPPCHWRNGCapDisableQuirksCapX86SMMCapMultiAddressSpaceCapGuestDebugHWBPSCapGuestDebugHWWPSCapSplitIRQChipCapIOEventFDAnyLengthCapHyperVSYNICCapS390RICapSPAPRTCE64CapARMPMUV3CapVCPUAttributesCapMAXVCPUIDCapX2APICAPICapS390UserINSTR0CapMSIDEVIDCapPPCHTMCapSPAPRResizeHPTCapPPCMMURADIXCapPPCMMUHASHV3CapImmediateExitCapMIPSVZCapMIPSTECapMIPS64BITCapS390GSCapS390AISCapSPAPRTCEVFIOCapX86DisableExitsCapARMUserIRQCapS390CMMAMigrationCapPPCFWNMICapPPCSMTPossibleCapHyperVSYNIC2CapHyperVVPIndexCapS390AISMigrationCapPPCGetCPUCharCapS390BPBCapGETMSRFeaturesCapHyperVEventFDCapHyperVTLBFlushCapS390HPage1MCapNestedStateCapARMInjectSErrorESRCapMSRPlatformInfoCapPPCNestedHVCapHyperVSendIPICapCoalescedPIOCapHyperVEnlightenedVMCSCapExceptionPayloadCapARMVMIPASizeCapManualDirtyLogProtectCapHyerVCPUIDCapManualDirtyLogProtect2CapPPCIRQXiveCapARMSVECapARMPTRAuthAddressCapARMPTRAuthGenericCapPMUEventFilterCapARMIRQLineLayout2CapHyperVDirectTLBFlushCapPPCGuestDebugSStepCapARMNISVToUserCapARMInjectEXTDABTCapS390VCPUResetsCapS390ProtectedCapPPCSecureGuestCapHALTPollCapASYNCPFIntCapLastCPUCapSmallerMaxPhyAddrCapS390DIAG318CapStealTimeCapX86UserSpaceMSRCapX86MSRFilterCapEnforcePVFeatureCPUIDCapSysHyperVCPUIDCapDirtyLogRingCapX86BusLockExitCapPPCDAWR1CapSetGuestDebug2CapSGXAttributeCapVMCopyEncContextFromCapPTPKVMCapHyperVEnforceCPUIDCapSREGS2CapEXitHyperCallCapPPCRPTInvalidateCapBinaryStatsFDCapExitOnEmulationFailureCapARMMTECapVMMoveEncContextFromCapVMGPABitsCapXSave2CapSysAttributesCapPPCAILMode3CapS390MemOpExtentionCapPMUCapabilityCapDisableQuirks2CapVMTSCControlCapSystemEventDataCapARMSystemSuspendCapS390ProtectedDumpCapX86TripleFaultEventCapX86NotifyVMExitCapVMDisableNXHugePagesCapS390ZPCIOPCapS390CPUTOPOLOGYCapDirtyLogRingACQRel"
)

var (
	_Capability_index_0 = [...]uint8{0, 10, 16, 40, 53, 66}
	_Capability_index_1 = [...]uint8{0, 8, 19, 33, 43, 56, 62, 75, 83, 93, 109, 119}
	_Capability_index_3 = [...]uint8{0, 27, 37, 53, 71, 84, 102}
	_Capability_index_4 = [...]uint16{0, 15, 40, 46, 54, 61, 76, 88, 100, 121, 130, 144, 164, 177, 187, 201, 210, 224, 237, 250, 269, 282, 294, 316, 325, 339, 351, 359, 366, 381, 395, 405, 418, 430, 446, 457, 466, 475, 486, 496, 506, 514, 523, 534, 553, 568, 579, 587, 602, 614, 631, 641, 656, 670, 686, 705, 717, 734, 743, 753, 772, 785, 795, 805, 815, 829, 845, 860, 873, 897, 911, 925, 945, 960, 972, 988, 1005, 1024, 1039, 1061, 1073, 1088, 1100, 1110, 1120, 1136, 1151, 1162, 1178, 1187, 1207, 1225, 1243, 1258, 1279, 1293, 1302, 1315, 1326, 1343, 1355, 1367, 1384, 1395, 1404, 1421, 1435, 1450, 1466, 1475, 1484, 1496, 1505, 1515, 1530, 1548, 1561, 1581, 1592, 1609, 1624, 1640, 1659, 1675, 1685, 1702, 1718, 1735, 1749, 1763, 1784, 1802, 1816, 1832, 1847, 1871, 1890, 1905, 1929, 1942, 1967, 1980, 1989, 2009, 2029, 2046, 2066, 2089, 2110, 2126, 2145, 2162, 2178, 2195, 2206, 2219, 2229, 2249, 2263, 2275, 2293, 2308, 2332, 2349, 2364, 2381, 2392, 2409, 2424, 2447, 2456, 2477, 2486, 2502, 2521, 2537, 2562, 2571, 2594, 2606, 2615, 2631, 2645, 2666, 2682, 2699, 2714, 2732, 2751, 2771, 2793, 2811, 2834, 2847, 2865, 2886}
)

func (i Capability) String() string {
	switch {
	case i <= 4:
		return _Capability_name_0[_Capability_index_0[i]:_Capability_index_0[i+1]]
	case 6 <= i && i <= 16:
		i -= 6
		return _Capability_name_1[_Capability_index_1[i]:_Capability_index_1[i+1]]
	case i == 18:
		return _Capability_name_2
	case 21 <= i && i <= 26:
		i -= 21
		return _Capability_name_3[_Capability_index_3[i]:_Capability_index_3[i+1]]
	case 29 <= i && i <= 223:
		i -= 29
		return _Capability_name_4[_Capability_index_4[i]:_Capability_index_4[i+1]]
	default:
		return "Capability(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
